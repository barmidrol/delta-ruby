name: release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ci-data:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.fetch.outputs.result }}
    steps:
      - id: fetch
        uses: oxidize-rb/actions/fetch-ci-data@v1
        with:
          supported-ruby-platforms: |
            # Excluding problematic platforms:
            # arm-linux: Cranelift doesn't support 32-bit architectures
            # x64-mingw32: Use x64-mingw-ucrt for Ruby 3.1+
            # darwin platforms: aws-lc-sys cross-compilation issues from Linux
            exclude: [arm-linux, x64-mingw32, arm64-darwin, x86_64-darwin]
          stable-ruby-versions: |
            exclude: [head]

  build:
    name: Build native gems
    needs: ci-data
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby-platform: ${{ fromJSON(needs.ci-data.outputs.result).supported-ruby-platforms }}
    steps:
      - uses: actions/checkout@v4

      - name: Install newer GCC to avoid aws-lc-sys memcmp bug
        run: |
          sudo apt-get update
          # Install GCC 12 which doesn't have the memcmp bug
          sudo apt-get install -y gcc-12 g++-12
          # Set as default
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 100
          # Verify version
          gcc --version
          g++ --version

      - uses: oxidize-rb/actions/setup-ruby-and-rust@v1
        with:
          ruby-version: "3.3"
          bundler-cache: false
          cargo-cache: true
          cargo-vendor: true
          cache-version: v1-${{ matrix.ruby-platform }}

      - uses: oxidize-rb/actions/cross-gem@v1
        with:
          version: latest
          platform: ${{ matrix.ruby-platform }}
          ruby-versions: ${{ join(fromJSON(needs.ci-data.outputs.result).stable-ruby-versions, ', ') }}

      - name: Smoke gem install
        if: matrix.ruby-platform == 'x86_64-linux'
        run: |
          gem install pkg/deltalake-rb-*x86_64-linux.gem --verbose
          ruby -e "require 'deltalake'; puts 'âœ… Precompiled gem works: ' + DeltaLake.precompiled?.to_s"

# Future: Add source gem build and publishing steps here

# Note: macOS gems excluded due to aws-lc-sys cross-compilation issues
# Can be built separately on macOS runners if needed in the future
